# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Banner {
  description: String!
  id: ID!
  imgUrl: String!
  title: String!
}

input BannerInputDto {
  description: String!
  imgUrl: String!
  title: String!
}

type Category {
  id: ID!
  name: String!
  totalCourse: Float!
}

type Course {
  _id: String!
  categories: [String!]!
  description: String!
  id: ID!
  isFree: Boolean!
  isPrivate: Boolean!
  price: String!
  tags: [String!]!
  thumbnail: String!
  title: String!
  totalChapter: Float!
  totalDislike: Float!
  totalLecture: Float!
  totalLike: Float!
  totalView: Float!
  userCreated: User!
  usersJoined: [User!]!
}

type CoursePaginateDto {
  limit: String!
  page: String!
  result: [Course!]!
  totalPage: String!
}

input CreateCategoryInputDto {
  name: String!
  totalCourse: Float! = 0
}

input CreateCourseInputDto {
  categories: [String!]!
  description: String!
  isPrivate: Boolean!
  price: String! = "0"
  tags: [String!]!
  thumbnail: String!
  title: String!
  totalChapter: Float! = 0
  totalDislike: Float! = 0
  totalLecture: Float! = 0
  totalLike: Float! = 0
  totalView: Float! = 0
  userCreated: ID! = ""
  usersJoined: [ID!]! = []
}

input CreateUserDto {
  avatar: String! = ""
  description: String! = ""
  email: String! = ""
  fullname: String!
  myBlogs: [String!]! = []
  myCourses: [String!]! = []
  myFavoriteBlogs: [String!]! = []
  myFavoriteCourses: [String!]! = []
  myLearningCourses: [String!]! = []
  password: String!
  phone: String! = ""
  role: String! = "customer"
  username: String!
}

type LoginResponse {
  access_token: String!
  user: User!
}

input LoginUserInputDto {
  password: String!
  username: String!
}

type Mutation {
  assignUserToCourse(body: assignUserToCourseDto!, id: String!): Course!
  create(body: CreateUserDto!): User!
  createBanner(body: BannerInputDto!): Banner!
  createCategory(body: CreateCategoryInputDto!): Category!
  createCourse(body: CreateCourseInputDto!): Course!
  deleteCategory(id: String!): [Category!]!
  login(loginUserInput: LoginUserInputDto!): LoginResponse!
  signup(signupUserInput: SignUpUserInputDto!): User!
  updateCategory(body: UpdateCategoryInputDto!, id: String!): Category!
  updateTitleCourse(id: String!, title: String!): Course!
  uploadMultipleFiles(files: [Upload!]!): [ResponseSingleUpload!]!
  uploadSingleFiles(file: Upload!): ResponseSingleUpload!
}

type Query {
  banners: [Banner!]!
  getCategories: [Category!]!
  getCategoryById(id: String!): Category!
  getCourse(id: String!): Course!
  getCourses(limit: String!, page: String!): CoursePaginateDto!
  user(id: String!): User!
  users: [User!]!
}

type ResponseSingleUpload {
  url: String!
}

input SignUpUserInputDto {
  avatar: String! = ""
  description: String! = ""
  email: String! = ""
  fullname: String!
  myBlogs: [String!]! = []
  myCourses: [String!]! = []
  myFavoriteBlogs: [String!]! = []
  myFavoriteCourses: [String!]! = []
  myLearningCourses: [String!]! = []
  password: String!
  phone: String! = ""
  role: String! = "customer"
  username: String!
}

input UpdateCategoryInputDto {
  name: String!
  totalCourse: Float!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type User {
  email: String!
  fullname: String!
  id: ID!
  myBlogs: [String!]!
  myCourses: [String!]!
  myFavoriteBlogs: [String!]!
  myFavoriteCourses: [String!]!
  myLearningCourses: [String!]!
  password: String!
  phone: String!
  role: String!
  username: String!
}

input assignUserToCourseDto {
  usersJoined: [ID!]!
}